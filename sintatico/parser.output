Nonterminals useless in grammar

   fundecl
   appexpr
   expr
   ifexpr
   yieldexpr
   op_prec1
   op_prec2
   op_prec3
   op_prec4
   op_prec5
   op_prec6
   op_prec7
   op_prec8
   exprs
   list_expr
   while_expr


Terminals unused in grammar

   "if"
   "then"
   "else"
   "yield"
   "||"
   "&&"
   "=="
   "/="
   "<"
   "<="
   ">"
   ">="
   "++"
   "+"
   "-"
   "%"
   "*"
   "/"
   "print"
   "while"


Rules useless in grammar

   46 line_elem: fundecl

   47 fundecl: ID args "=" expr ';'
   48        | ID args "=" expr where_exp
   49        | ID "=" expr ';'
   50        | ID "=" expr where_exp

   51 appexpr: ID expr

   52 expr: op_prec1
   53     | appexpr
   54     | ifexpr
   55     | yieldexpr

   56 ifexpr: "if" expr "then" '{' expr '}' "else" '{' expr '}'

   57 yieldexpr: "yield" ifexpr
   58          | "yield" appexpr
   59          | "yield" op_prec1

   60 op_prec1: op_prec2 "||" op_prec1
   61         | op_prec2

   62 op_prec2: op_prec3 "&&" op_prec2
   63         | op_prec3

   64 op_prec3: op_prec3 "==" op_prec4
   65         | op_prec3 "/=" op_prec4
   66         | op_prec3 "<" op_prec4
   67         | op_prec3 "<=" op_prec4
   68         | op_prec3 ">" op_prec4
   69         | op_prec3 ">=" op_prec4 op_prec4

   70 op_prec4: op_prec5 ":" op_prec4
   71         | op_prec5 "++" op_prec4
   72         | op_prec5

   73 op_prec5: op_prec5 "+" op_prec6
   74         | op_prec5 "-" op_prec6
   75         | op_prec6

   76 op_prec6: op_prec6 "%" op_prec7
   77         | op_prec7

   78 op_prec7: op_prec7 "*" op_prec8
   79         | op_prec7 "/" op_prec8
   80         | op_prec8

   81 op_prec8: basic_value
   82         | list_expr
   83         | "(" expr ")"
   84         | "-" expr

   85 exprs: expr
   86      | expr "," exprs

   87 list_expr: %empty
   88          | "[" exprs "]"
   89          | "[" "]"

   90 stmt: basic_value "<-" expr ';'
   91     | basic_value "<-" while_expr ';'
   92     | expr ';'
   93     | while_expr ';'

   94 io_stmt: "print" expr

   95 while_expr: "while" "(" expr ")" '{' stmts '}'


Grammar

    0 $accept: program $end

    1 program: line_elems

    2 line_elems: line_elem line_elems
    3           | line_elem

    4 line_elem: procdecl
    5          | funtype_decl

    6 args: arg_value args
    7     | arg_value
    8     | WILDSCORE

    9 arg_value: list_value
   10          | basic_value
   11          | "(" arg_value ")"

   12 basic_value: INT
   13            | FLOAT
   14            | BOOLVAL
   15            | ID
   16            | "(" ")"

   17 list_value: basic_value ":" list_value list_value ":" list_value WILDSCORE ":" list_value
   18           | built_list_value

   19 built_list_value: "[" "]"
   20                 | "[" args "]"

   21 funtype_decl: ID "::" funtype ';'

   22 funtype: basic_type
   23        | "(" funtype ")"
   24        | basic_type "->" funtype

   25 basic_type: INTEGER
   26           | FLOAT_T
   27           | BOOL
   28           | "[" types "]"
   29           | ID
   30           | "(" ")"

   31 types: basic_type
   32      | basic_type "," types

   33 where_exp: "where" '{' line_elems '}'

   34 procdecl: ID args "=" "do" '{' stmts '}'
   35         | ID args "=" "do" '{' stmts '}' where_exp
   36         | ID "=" "do" '{' stmts '}'
   37         | ID "=" "do" '{' stmts '}' where_exp

   38 stmts: stmt
   39      | stmt stmts

   40 stmt: basic_value "<-" io_stmt ';'
   41     | io_stmt ';'

   42 io_stmt: %empty
   43        | "readInt"
   44        | "readFloat"
   45        | "readBool"


Terminals, with rules where they appear

$end (0) 0
';' (59) 21 40 41
'{' (123) 33 34 35 36 37
'}' (125) 33 34 35 36 37
error (256)
ID (258) 15 21 29 34 35 36 37
WILDSCORE (259) 8 17
INT (260) 12
FLOAT (261) 13
BOOLVAL (262) 14
BOOL (263) 27
FLOAT_T (264) 26
INTEGER (265) 25
"=" (266) 34 35 36 37
"(" (267) 11 16 23 30
")" (268) 11 16 23 30
":" (269) 17
"[" (270) 19 20 28
"]" (271) 19 20 28
"::" (272) 21
"->" (273) 24
"," (274) 32
"if" (275)
"then" (276)
"else" (277)
"yield" (278)
"||" (279)
"&&" (280)
"==" (281)
"/=" (282)
"<" (283)
"<=" (284)
">" (285)
">=" (286)
"++" (287)
"+" (288)
"-" (289)
"%" (290)
"*" (291)
"/" (292)
"where" (293) 33
"do" (294) 34 35 36 37
"<-" (295) 40
"readInt" (296) 43
"readFloat" (297) 44
"readBool" (298) 45
"print" (299)
"while" (300)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1, on right: 0
line_elems (51)
    on left: 2 3, on right: 1 2 33
line_elem (52)
    on left: 4 5, on right: 2 3
args (53)
    on left: 6 7 8, on right: 6 20 34 35
arg_value (54)
    on left: 9 10 11, on right: 6 7 11
basic_value (55)
    on left: 12 13 14 15 16, on right: 10 17 40
list_value (56)
    on left: 17 18, on right: 9 17
built_list_value (57)
    on left: 19 20, on right: 18
funtype_decl (58)
    on left: 21, on right: 5
funtype (59)
    on left: 22 23 24, on right: 21 23 24
basic_type (60)
    on left: 25 26 27 28 29 30, on right: 22 24 31 32
types (61)
    on left: 31 32, on right: 28 32
where_exp (62)
    on left: 33, on right: 35 37
procdecl (63)
    on left: 34 35 36 37, on right: 4
stmts (64)
    on left: 38 39, on right: 34 35 36 37 39
stmt (65)
    on left: 40 41, on right: 38 39
io_stmt (66)
    on left: 42 43 44 45, on right: 40 41


State 0

    0 $accept: . program $end

    ID  shift, and go to state 1

    program       go to state 2
    line_elems    go to state 3
    line_elem     go to state 4
    funtype_decl  go to state 5
    procdecl      go to state 6


State 1

   21 funtype_decl: ID . "::" funtype ';'
   34 procdecl: ID . args "=" "do" '{' stmts '}'
   35         | ID . args "=" "do" '{' stmts '}' where_exp
   36         | ID . "=" "do" '{' stmts '}'
   37         | ID . "=" "do" '{' stmts '}' where_exp

    ID         shift, and go to state 7
    WILDSCORE  shift, and go to state 8
    INT        shift, and go to state 9
    FLOAT      shift, and go to state 10
    BOOLVAL    shift, and go to state 11
    "="        shift, and go to state 12
    "("        shift, and go to state 13
    "["        shift, and go to state 14
    "::"       shift, and go to state 15

    args              go to state 16
    arg_value         go to state 17
    basic_value       go to state 18
    list_value        go to state 19
    built_list_value  go to state 20


State 2

    0 $accept: program . $end

    $end  shift, and go to state 21


State 3

    1 program: line_elems .

    $default  reduce using rule 1 (program)


State 4

    2 line_elems: line_elem . line_elems
    3           | line_elem .

    ID  shift, and go to state 1

    $default  reduce using rule 3 (line_elems)

    line_elems    go to state 22
    line_elem     go to state 4
    funtype_decl  go to state 5
    procdecl      go to state 6


State 5

    5 line_elem: funtype_decl .

    $default  reduce using rule 5 (line_elem)


State 6

    4 line_elem: procdecl .

    $default  reduce using rule 4 (line_elem)


State 7

   15 basic_value: ID .

    $default  reduce using rule 15 (basic_value)


State 8

    8 args: WILDSCORE .

    $default  reduce using rule 8 (args)


State 9

   12 basic_value: INT .

    $default  reduce using rule 12 (basic_value)


State 10

   13 basic_value: FLOAT .

    $default  reduce using rule 13 (basic_value)


State 11

   14 basic_value: BOOLVAL .

    $default  reduce using rule 14 (basic_value)


State 12

   36 procdecl: ID "=" . "do" '{' stmts '}'
   37         | ID "=" . "do" '{' stmts '}' where_exp

    "do"  shift, and go to state 23


State 13

   11 arg_value: "(" . arg_value ")"
   16 basic_value: "(" . ")"

    ID       shift, and go to state 7
    INT      shift, and go to state 9
    FLOAT    shift, and go to state 10
    BOOLVAL  shift, and go to state 11
    "("      shift, and go to state 13
    ")"      shift, and go to state 24
    "["      shift, and go to state 14

    arg_value         go to state 25
    basic_value       go to state 18
    list_value        go to state 19
    built_list_value  go to state 20


State 14

   19 built_list_value: "[" . "]"
   20                 | "[" . args "]"

    ID         shift, and go to state 7
    WILDSCORE  shift, and go to state 8
    INT        shift, and go to state 9
    FLOAT      shift, and go to state 10
    BOOLVAL    shift, and go to state 11
    "("        shift, and go to state 13
    "["        shift, and go to state 14
    "]"        shift, and go to state 26

    args              go to state 27
    arg_value         go to state 17
    basic_value       go to state 18
    list_value        go to state 19
    built_list_value  go to state 20


State 15

   21 funtype_decl: ID "::" . funtype ';'

    ID       shift, and go to state 28
    BOOL     shift, and go to state 29
    FLOAT_T  shift, and go to state 30
    INTEGER  shift, and go to state 31
    "("      shift, and go to state 32
    "["      shift, and go to state 33

    funtype     go to state 34
    basic_type  go to state 35


State 16

   34 procdecl: ID args . "=" "do" '{' stmts '}'
   35         | ID args . "=" "do" '{' stmts '}' where_exp

    "="  shift, and go to state 36


State 17

    6 args: arg_value . args
    7     | arg_value .

    ID         shift, and go to state 7
    WILDSCORE  shift, and go to state 8
    INT        shift, and go to state 9
    FLOAT      shift, and go to state 10
    BOOLVAL    shift, and go to state 11
    "("        shift, and go to state 13
    "["        shift, and go to state 14

    $default  reduce using rule 7 (args)

    args              go to state 37
    arg_value         go to state 17
    basic_value       go to state 18
    list_value        go to state 19
    built_list_value  go to state 20


State 18

   10 arg_value: basic_value .
   17 list_value: basic_value . ":" list_value list_value ":" list_value WILDSCORE ":" list_value

    ":"  shift, and go to state 38

    $default  reduce using rule 10 (arg_value)


State 19

    9 arg_value: list_value .

    $default  reduce using rule 9 (arg_value)


State 20

   18 list_value: built_list_value .

    $default  reduce using rule 18 (list_value)


State 21

    0 $accept: program $end .

    $default  accept


State 22

    2 line_elems: line_elem line_elems .

    $default  reduce using rule 2 (line_elems)


State 23

   36 procdecl: ID "=" "do" . '{' stmts '}'
   37         | ID "=" "do" . '{' stmts '}' where_exp

    '{'  shift, and go to state 39


State 24

   16 basic_value: "(" ")" .

    $default  reduce using rule 16 (basic_value)


State 25

   11 arg_value: "(" arg_value . ")"

    ")"  shift, and go to state 40


State 26

   19 built_list_value: "[" "]" .

    $default  reduce using rule 19 (built_list_value)


State 27

   20 built_list_value: "[" args . "]"

    "]"  shift, and go to state 41


State 28

   29 basic_type: ID .

    $default  reduce using rule 29 (basic_type)


State 29

   27 basic_type: BOOL .

    $default  reduce using rule 27 (basic_type)


State 30

   26 basic_type: FLOAT_T .

    $default  reduce using rule 26 (basic_type)


State 31

   25 basic_type: INTEGER .

    $default  reduce using rule 25 (basic_type)


State 32

   23 funtype: "(" . funtype ")"
   30 basic_type: "(" . ")"

    ID       shift, and go to state 28
    BOOL     shift, and go to state 29
    FLOAT_T  shift, and go to state 30
    INTEGER  shift, and go to state 31
    "("      shift, and go to state 32
    ")"      shift, and go to state 42
    "["      shift, and go to state 33

    funtype     go to state 43
    basic_type  go to state 35


State 33

   28 basic_type: "[" . types "]"

    ID       shift, and go to state 28
    BOOL     shift, and go to state 29
    FLOAT_T  shift, and go to state 30
    INTEGER  shift, and go to state 31
    "("      shift, and go to state 44
    "["      shift, and go to state 33

    basic_type  go to state 45
    types       go to state 46


State 34

   21 funtype_decl: ID "::" funtype . ';'

    ';'  shift, and go to state 47


State 35

   22 funtype: basic_type .
   24        | basic_type . "->" funtype

    "->"  shift, and go to state 48

    $default  reduce using rule 22 (funtype)


State 36

   34 procdecl: ID args "=" . "do" '{' stmts '}'
   35         | ID args "=" . "do" '{' stmts '}' where_exp

    "do"  shift, and go to state 49


State 37

    6 args: arg_value args .

    $default  reduce using rule 6 (args)


State 38

   17 list_value: basic_value ":" . list_value list_value ":" list_value WILDSCORE ":" list_value

    ID       shift, and go to state 7
    INT      shift, and go to state 9
    FLOAT    shift, and go to state 10
    BOOLVAL  shift, and go to state 11
    "("      shift, and go to state 50
    "["      shift, and go to state 14

    basic_value       go to state 51
    list_value        go to state 52
    built_list_value  go to state 20


State 39

   36 procdecl: ID "=" "do" '{' . stmts '}'
   37         | ID "=" "do" '{' . stmts '}' where_exp

    ID           shift, and go to state 7
    INT          shift, and go to state 9
    FLOAT        shift, and go to state 10
    BOOLVAL      shift, and go to state 11
    "("          shift, and go to state 50
    "readInt"    shift, and go to state 53
    "readFloat"  shift, and go to state 54
    "readBool"   shift, and go to state 55

    $default  reduce using rule 42 (io_stmt)

    basic_value  go to state 56
    stmts        go to state 57
    stmt         go to state 58
    io_stmt      go to state 59


State 40

   11 arg_value: "(" arg_value ")" .

    $default  reduce using rule 11 (arg_value)


State 41

   20 built_list_value: "[" args "]" .

    $default  reduce using rule 20 (built_list_value)


State 42

   30 basic_type: "(" ")" .

    $default  reduce using rule 30 (basic_type)


State 43

   23 funtype: "(" funtype . ")"

    ")"  shift, and go to state 60


State 44

   30 basic_type: "(" . ")"

    ")"  shift, and go to state 42


State 45

   31 types: basic_type .
   32      | basic_type . "," types

    ","  shift, and go to state 61

    $default  reduce using rule 31 (types)


State 46

   28 basic_type: "[" types . "]"

    "]"  shift, and go to state 62


State 47

   21 funtype_decl: ID "::" funtype ';' .

    $default  reduce using rule 21 (funtype_decl)


State 48

   24 funtype: basic_type "->" . funtype

    ID       shift, and go to state 28
    BOOL     shift, and go to state 29
    FLOAT_T  shift, and go to state 30
    INTEGER  shift, and go to state 31
    "("      shift, and go to state 32
    "["      shift, and go to state 33

    funtype     go to state 63
    basic_type  go to state 35


State 49

   34 procdecl: ID args "=" "do" . '{' stmts '}'
   35         | ID args "=" "do" . '{' stmts '}' where_exp

    '{'  shift, and go to state 64


State 50

   16 basic_value: "(" . ")"

    ")"  shift, and go to state 24


State 51

   17 list_value: basic_value . ":" list_value list_value ":" list_value WILDSCORE ":" list_value

    ":"  shift, and go to state 38


State 52

   17 list_value: basic_value ":" list_value . list_value ":" list_value WILDSCORE ":" list_value

    ID       shift, and go to state 7
    INT      shift, and go to state 9
    FLOAT    shift, and go to state 10
    BOOLVAL  shift, and go to state 11
    "("      shift, and go to state 50
    "["      shift, and go to state 14

    basic_value       go to state 51
    list_value        go to state 65
    built_list_value  go to state 20


State 53

   43 io_stmt: "readInt" .

    $default  reduce using rule 43 (io_stmt)


State 54

   44 io_stmt: "readFloat" .

    $default  reduce using rule 44 (io_stmt)


State 55

   45 io_stmt: "readBool" .

    $default  reduce using rule 45 (io_stmt)


State 56

   40 stmt: basic_value . "<-" io_stmt ';'

    "<-"  shift, and go to state 66


State 57

   36 procdecl: ID "=" "do" '{' stmts . '}'
   37         | ID "=" "do" '{' stmts . '}' where_exp

    '}'  shift, and go to state 67


State 58

   38 stmts: stmt .
   39      | stmt . stmts

    ID           shift, and go to state 7
    INT          shift, and go to state 9
    FLOAT        shift, and go to state 10
    BOOLVAL      shift, and go to state 11
    "("          shift, and go to state 50
    "readInt"    shift, and go to state 53
    "readFloat"  shift, and go to state 54
    "readBool"   shift, and go to state 55

    ';'       reduce using rule 42 (io_stmt)
    $default  reduce using rule 38 (stmts)

    basic_value  go to state 56
    stmts        go to state 68
    stmt         go to state 58
    io_stmt      go to state 59


State 59

   41 stmt: io_stmt . ';'

    ';'  shift, and go to state 69


State 60

   23 funtype: "(" funtype ")" .

    $default  reduce using rule 23 (funtype)


State 61

   32 types: basic_type "," . types

    ID       shift, and go to state 28
    BOOL     shift, and go to state 29
    FLOAT_T  shift, and go to state 30
    INTEGER  shift, and go to state 31
    "("      shift, and go to state 44
    "["      shift, and go to state 33

    basic_type  go to state 45
    types       go to state 70


State 62

   28 basic_type: "[" types "]" .

    $default  reduce using rule 28 (basic_type)


State 63

   24 funtype: basic_type "->" funtype .

    $default  reduce using rule 24 (funtype)


State 64

   34 procdecl: ID args "=" "do" '{' . stmts '}'
   35         | ID args "=" "do" '{' . stmts '}' where_exp

    ID           shift, and go to state 7
    INT          shift, and go to state 9
    FLOAT        shift, and go to state 10
    BOOLVAL      shift, and go to state 11
    "("          shift, and go to state 50
    "readInt"    shift, and go to state 53
    "readFloat"  shift, and go to state 54
    "readBool"   shift, and go to state 55

    $default  reduce using rule 42 (io_stmt)

    basic_value  go to state 56
    stmts        go to state 71
    stmt         go to state 58
    io_stmt      go to state 59


State 65

   17 list_value: basic_value ":" list_value list_value . ":" list_value WILDSCORE ":" list_value

    ":"  shift, and go to state 72


State 66

   40 stmt: basic_value "<-" . io_stmt ';'

    "readInt"    shift, and go to state 53
    "readFloat"  shift, and go to state 54
    "readBool"   shift, and go to state 55

    $default  reduce using rule 42 (io_stmt)

    io_stmt  go to state 73


State 67

   36 procdecl: ID "=" "do" '{' stmts '}' .
   37         | ID "=" "do" '{' stmts '}' . where_exp

    "where"  shift, and go to state 74

    $default  reduce using rule 36 (procdecl)

    where_exp  go to state 75


State 68

   39 stmts: stmt stmts .

    $default  reduce using rule 39 (stmts)


State 69

   41 stmt: io_stmt ';' .

    $default  reduce using rule 41 (stmt)


State 70

   32 types: basic_type "," types .

    $default  reduce using rule 32 (types)


State 71

   34 procdecl: ID args "=" "do" '{' stmts . '}'
   35         | ID args "=" "do" '{' stmts . '}' where_exp

    '}'  shift, and go to state 76


State 72

   17 list_value: basic_value ":" list_value list_value ":" . list_value WILDSCORE ":" list_value

    ID       shift, and go to state 7
    INT      shift, and go to state 9
    FLOAT    shift, and go to state 10
    BOOLVAL  shift, and go to state 11
    "("      shift, and go to state 50
    "["      shift, and go to state 14

    basic_value       go to state 51
    list_value        go to state 77
    built_list_value  go to state 20


State 73

   40 stmt: basic_value "<-" io_stmt . ';'

    ';'  shift, and go to state 78


State 74

   33 where_exp: "where" . '{' line_elems '}'

    '{'  shift, and go to state 79


State 75

   37 procdecl: ID "=" "do" '{' stmts '}' where_exp .

    $default  reduce using rule 37 (procdecl)


State 76

   34 procdecl: ID args "=" "do" '{' stmts '}' .
   35         | ID args "=" "do" '{' stmts '}' . where_exp

    "where"  shift, and go to state 74

    $default  reduce using rule 34 (procdecl)

    where_exp  go to state 80


State 77

   17 list_value: basic_value ":" list_value list_value ":" list_value . WILDSCORE ":" list_value

    WILDSCORE  shift, and go to state 81


State 78

   40 stmt: basic_value "<-" io_stmt ';' .

    $default  reduce using rule 40 (stmt)


State 79

   33 where_exp: "where" '{' . line_elems '}'

    ID  shift, and go to state 1

    line_elems    go to state 82
    line_elem     go to state 4
    funtype_decl  go to state 5
    procdecl      go to state 6


State 80

   35 procdecl: ID args "=" "do" '{' stmts '}' where_exp .

    $default  reduce using rule 35 (procdecl)


State 81

   17 list_value: basic_value ":" list_value list_value ":" list_value WILDSCORE . ":" list_value

    ":"  shift, and go to state 83


State 82

   33 where_exp: "where" '{' line_elems . '}'

    '}'  shift, and go to state 84


State 83

   17 list_value: basic_value ":" list_value list_value ":" list_value WILDSCORE ":" . list_value

    ID       shift, and go to state 7
    INT      shift, and go to state 9
    FLOAT    shift, and go to state 10
    BOOLVAL  shift, and go to state 11
    "("      shift, and go to state 50
    "["      shift, and go to state 14

    basic_value       go to state 51
    list_value        go to state 85
    built_list_value  go to state 20


State 84

   33 where_exp: "where" '{' line_elems '}' .

    $default  reduce using rule 33 (where_exp)


State 85

   17 list_value: basic_value ":" list_value list_value ":" list_value WILDSCORE ":" list_value .

    $default  reduce using rule 17 (list_value)
